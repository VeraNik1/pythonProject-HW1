"""2. üìå–î–æ—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–¥–∞—á—É 1
üìå–ü—Ä–µ–≤—Ä–∞—Ç–∏—Ç–µ –≤–Ω–µ—à–Ω—é—é —Ñ—É–Ω–∫—Ü–∏—é –≤ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä.
üìå–û–Ω –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–≤–µ—Ä—è—Ç—å –≤—Ö–æ–¥—è—Ç –ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –≤ —Ñ—É–Ω–∫—Ü–∏—é—É–≥–∞–¥–∞–π–∫—É —á–∏—Å–ª–∞ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω—ã [1, 100] –∏ [1, 10].
üìå–ï—Å–ª–∏ –Ω–µ –≤—Ö–æ–¥—è—Ç, –≤—ã–∑—ã–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é —Å–æ —Å–ª—É—á–∞–π–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏ –∏–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤"""

import random as rnd
import sem_4 as s
import sem_3 as d
from functools import wraps


def deco(func):
    @wraps(func)
    def inner(*args):
        a, b, *_ = args
        if a not in range(1, 101):
            a = rnd.randint(1, 100)
            print(f'–ß–∏—Å–ª–æ –Ω–µ –ø–æ–ø–∞–ª–æ –≤ –∑–∞–¥–∞–Ω–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω! –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ {a}')
        if b not in range(1, 11):
            b = rnd.randint(1, 10)
            print(f'–ß–∏—Å–ª–æ –Ω–µ –ø–æ–ø–∞–ª–æ –≤ –∑–∞–¥–∞–Ω–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω! –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ {b}')
        func(a, b)

    return inner


@s.restarting_func(3)
@deco
@d.logger_json
def guess_number(a: int, b: int):
    print(f'–ù–æ–≤–∞—è –∏–≥—Ä–∞\n')
    while b:
        print(f'–£ —Ç–µ–±—è –æ—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫: {b}\n')
        try:
            user_choice = int(input('–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100: '))
            if user_choice > 100 or user_choice < 1:
                print('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 1 –¥–æ 100\n')
                continue
        except:
            print('–í–≤–µ–¥–µ–Ω–æ –Ω–µ —á–∏—Å–ª–æ\n')
            continue

        if user_choice < a:
            print(f'{user_choice} –º–µ–Ω—å—à–µ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–≥–æ')
        elif user_choice > a:
            print(f'{user_choice} –±–æ–ª—å—à–µ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–≥–æ')
        else:
            print(f'–¢—ã —É–≥–∞–¥–∞–ª —á–∏—Å–ª–æ {user_choice}\n')
            return str(user_choice)
        b -= 1
    else:
        print(f'–¢—ã –Ω–µ —É–≥–∞–¥–∞–ª —á–∏—Å–ª–æ {a}')
        return f'–¢—ã –Ω–µ —É–≥–∞–¥–∞–ª —á–∏—Å–ª–æ {a}'


if __name__ == '__main__':
    guess_number(200, 100, 50, 88, "asasa")

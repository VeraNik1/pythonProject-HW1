"""✔ Пользователь вводит строку из четырёх
или более целых чисел, разделённых символом “/”.
Сформируйте словарь, где:
✔второе и третье число являются ключами.
✔первое число является значением для первого ключа.
✔четвертое и все возможные последующие числа
 хранятся в кортеже как значения второго ключа."""

"""
first, second, third, *forth = input("Введите данные в формате int/int/int/int....\n>>>>  ").split("/")
result = {second: first, third: forth}
print(result)
"""
"""Задание №2
✔ Самостоятельно сохраните в переменной строку текста.
✔ Создайте из строки словарь, где ключ — буква, а значение — код буквы.
✔ Напишите преобразование в одну строку. """

"""text = 'this is not true'
dict_of_letters = {k: ord(k) for k in set(text.replace(" ", ''))}
print(dict_of_letters)"""

"""Задание №3
✔ Продолжаем развивать задачу 2.
✔ Возьмите словарь, который вы получили.
Сохраните его итераторатор.
✔ Далее выведите первые 5 пар ключ-значение,
обращаясь к итератору, а не к словарю.
"""
"""iter_dict = iter(dict_of_letters.items())

for _ in range(5):
    print(*next(iter_dict))"""

"""Задание №4
✔ Создайте генератор чётных чисел от нуля до 100.
✔ Из последовательности исключите
числа, сумма цифр которых равна 8.
✔ Решение в одну строку.
"""

"""even_generator = (i for i in range(0, 101, 2) if sum(map(int, str(i))) != 8)
print(*even_generator)
"""

"""✔ Напишите программу, которая выводит
на экран числа от 1 до 100.
✔ При этом вместо чисел, кратных трем,
программа должна выводить слово «Fizz»
✔ Вместо чисел, кратных пяти — слово «Buzz».
✔ Если число кратно и 3, и 5, то программа
должна выводить слово «FizzBuzz».
✔ *Превратите решение в генераторное выражение.
"""

"""def numbers_gen():
    for i in range(1, 101):
        if not i % 3 and not i % 5:
            yield 'FizzBuzz'
        elif not i % 3:
            yield 'Fizz'
        elif not i % 5:
            yield 'Buzz'
        else:
            yield i

x = numbers_gen()

for _ in range(1, 101):
    print(next(x))"""

"""numbers_gen = (f'{str(i)*(i%15!=0)}{"Fuzz"*(i%3==0)}{"Buzz"*(i%5==0)}\n' for i in range(1, 101))
print(*numbers_gen)"""

"""Задание №6
✔ Выведите в консоль таблицу умножения
от 2х2 до 9х10 как на школьной тетрадке.
✔ Таблицу создайте в виде однострочного
генератора, где каждый элемент генератора —
отдельный пример таблицы умножения.
✔ Для вывода результата используйте «принт»
без перехода на новую строку.
"""

generator = (
    ('\t\t'.join(
        "\t\t\t\t\t\tТАБЛИЦА УМНОЖЕНИЯ\n\n " * (i == j == 2) + f'{i:2} X {j:2} = {i * j:2}' + "\n" * (i == k + 3) +
        "\n\n" * (i * j == 50) for i in range(k, k + 4))
        for k in [2, 6] for j in range(2, 11)) for _ in range(1_000_000))

print(*next(generator))
print(*next(generator))
print(*next(generator))
print(*next(generator))

"""Задание №7
✔ Создайте функцию-генератор.
✔ Функция генерирует N простых чисел,
начиная с числа 2.
✔ Для проверки числа на простоту используйте
правило: «число является простым, если делится
нацело только на единицу и на себя».
"""
